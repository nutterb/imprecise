% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_sigfig.R, R/set_precision.R
\name{count_sigfig_internal}
\alias{count_sigfig_internal}
\alias{get_precision_internal}
\title{Internal Get Precision Function}
\usage{
count_sigfig_internal(x, handle_constant = FALSE)

get_precision_internal(x, handle_constant = FALSE)
}
\arguments{
\item{x}{A numeric vector.  The behavior of the function will vary
for vectors that are not \code{measured} or \code{calculated}
depending on the value of \code{handle_constant}}

\item{handle_constant}{\code{logical(1)}. This argument is ignored 
when \code{x} is either \code{measured} or \code{calculated}. For
other numeric types, when \code{FALSE}, \code{NULL} is returned; 
otherwise, a vector of \code{-Inf} the length of \code{x} is 
returned. This vector suggests that the values are considered
constants (infinite precision).}
}
\description{
At times, I need \code{get_precision} to return a vector of 
  \code{-Inf}, to indicate the precision of a constant (a standard 
  numeric or double vector).  Using a separate internal function allows
  me this flexibility without exposing the \code{handle_constant}
  argument to the user.  \code{get_precision} then references this 
  function to avoid duplication of code.
}

